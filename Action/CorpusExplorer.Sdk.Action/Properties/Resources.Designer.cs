//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CorpusExplorer.Sdk.Action.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CorpusExplorer.Sdk.Action.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die category ähnelt.
        /// </summary>
        internal static string Category {
            get {
                return ResourceManager.GetString("Category", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die content ähnelt.
        /// </summary>
        internal static string Content {
            get {
                return ResourceManager.GetString("Content", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die corresponding [LAYER1] [LAYER2] - find all corresponding values betweet LAYER1 &amp; LAYER2 (e. g. 1: Lemma / 2: Wort) ähnelt.
        /// </summary>
        internal static string CorrespondingValuesActionDescription {
            get {
                return ResourceManager.GetString("CorrespondingValuesActionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die basic-information - basic information tokens/sentences/documents ähnelt.
        /// </summary>
        internal static string DescBasicInformation {
            get {
                return ResourceManager.GetString("DescBasicInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die style-burrowsd [META1] [META2] - compares [META1] with [META2] based on &quot;Burrows Delta&quot; ähnelt.
        /// </summary>
        internal static string DescBurrowsDelta {
            get {
                return ResourceManager.GetString("DescBurrowsDelta", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die cluster [QUERY] [TASK] {ARGUMENTS} - executes a [TASK] for every cluster (generated by [QUERY]) ähnelt.
        /// </summary>
        internal static string DescCluster {
            get {
                return ResourceManager.GetString("DescCluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die cluster-list [QUERY] - works like cluster but returns clusters with document GUIDs. ähnelt.
        /// </summary>
        internal static string DescClusterList {
            get {
                return ResourceManager.GetString("DescClusterList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die convert - see help section [OUTPUT] for more information ähnelt.
        /// </summary>
        internal static string DescConvert {
            get {
                return ResourceManager.GetString("DescConvert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die cooccurrence [LAYER] {minSIGNI} {minFREQ} - significant cooccurrences for all [LAYER] values ähnelt.
        /// </summary>
        internal static string DescCooccurrence {
            get {
                return ResourceManager.GetString("DescCooccurrence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die cooccurrence-profile [LAYER] [WORD] - significant cooccurrence profile for [WORD] on [LAYER]. ähnelt.
        /// </summary>
        internal static string DescCooccurrenceProfile {
            get {
                return ResourceManager.GetString("DescCooccurrenceProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die cooccurrence-cross [LAYER] [WORDS] - significant cooccurrence cross for [WORDS] on [LAYER]. ähnelt.
        /// </summary>
        internal static string DescCooccurrencesCross {
            get {
                return ResourceManager.GetString("DescCooccurrencesCross", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die cooccurrence-select [LAYER] [WORDS] - significant cooccurrences for all [LAYER] values. ähnelt.
        /// </summary>
        internal static string DescCooccurrenceSelect {
            get {
                return ResourceManager.GetString("DescCooccurrenceSelect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die cross-frequency {LAYER} - calculates the cross-frequency based on [LAYER] ähnelt.
        /// </summary>
        internal static string DescCrossFrequency {
            get {
                return ResourceManager.GetString("DescCrossFrequency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die how-many-documents - sum of all documents ähnelt.
        /// </summary>
        internal static string DescDocumentCount {
            get {
                return ResourceManager.GetString("DescDocumentCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die frequency1-raw {LAYER} - count token frequency on [LAYER] (no rel. frequency) ähnelt.
        /// </summary>
        internal static string DescFreq1Raw {
            get {
                return ResourceManager.GetString("DescFreq1Raw", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die frequency2-raw {LAYER1} {LAYER2} - count token frequency on 2 layers (no rel. frequency) ähnelt.
        /// </summary>
        internal static string DescFreq2Raw {
            get {
                return ResourceManager.GetString("DescFreq2Raw", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die frequency3-raw {LAYER1} {LAYER2} {LAYER3} - count token frequency on 3 layers (no rel. frequency) ähnelt.
        /// </summary>
        internal static string DescFreq3Raw {
            get {
                return ResourceManager.GetString("DescFreq3Raw", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die frequency1 {LAYER} - count token frequency on {LAYER} (default: Wort) ähnelt.
        /// </summary>
        internal static string DescFrequency1 {
            get {
                return ResourceManager.GetString("DescFrequency1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die frequency1-select [LAYER] [WORDS/FILE/SDM] - count token frequency on 1 [LAYER] - [WORDS] = space separated tokens [FILE] = one line one token [SDM] = SDM-File ähnelt.
        /// </summary>
        internal static string DescFrequency1Selected {
            get {
                return ResourceManager.GetString("DescFrequency1Selected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die frequency2 {LAYER1} {LAYER2} - count token frequency on 2 layers (default: Lemma, Wort) ähnelt.
        /// </summary>
        internal static string DescFrequency2 {
            get {
                return ResourceManager.GetString("DescFrequency2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die frequency3 {LAYER1} {LAYER2} {LAYER3} - count token frequency on 3 layers (default: POS, Lemma, Wort) ähnelt.
        /// </summary>
        internal static string DescFrequency3 {
            get {
                return ResourceManager.GetString("DescFrequency3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die get-document [GUID] {LAYER} - get all layer-information for specific [GUID] document. Use {LAYER} to filter output. ähnelt.
        /// </summary>
        internal static string DescGetDocument {
            get {
                return ResourceManager.GetString("DescGetDocument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die get-document-displaynames - get all document GUID / display-names. ähnelt.
        /// </summary>
        internal static string DescGetDocumentDisplayname {
            get {
                return ResourceManager.GetString("DescGetDocumentDisplayname", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die get-document-metadata [GUID] - get all metadata for specific [GUID] document. ähnelt.
        /// </summary>
        internal static string DescGetDocumentMetadata {
            get {
                return ResourceManager.GetString("DescGetDocumentMetadata", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die hash [LAYER] [ALGO] - calculates a hashsum for all documents in [LAYER]. [ALGO] = MD5, SHA1, SHA256, SHA512 ähnelt.
        /// </summary>
        internal static string DescHash {
            get {
                return ResourceManager.GetString("DescHash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die how-many-sentences - sum of all sentences ähnelt.
        /// </summary>
        internal static string DescHowManySentences {
            get {
                return ResourceManager.GetString("DescHowManySentences", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die how-many-tokens - sum of all tokens ähnelt.
        /// </summary>
        internal static string DescHowManyToken {
            get {
                return ResourceManager.GetString("DescHowManyToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die how-many-types [LAYER] - sum of all [LAYER]-values (types) ähnelt.
        /// </summary>
        internal static string DescHowManyTypes {
            get {
                return ResourceManager.GetString("DescHowManyTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die idf [META] {LAYER} - inverse document frequency for [META] on {LAYER} (default: WORT) ähnelt.
        /// </summary>
        internal static string DescIdf {
            get {
                return ResourceManager.GetString("DescIdf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die kwic-document [LAYER] [WORDS] - [WORDS] = space separated tokens - a document must contains all token ähnelt.
        /// </summary>
        internal static string DescKwicAllInDocument {
            get {
                return ResourceManager.GetString("DescKwicAllInDocument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die kwic-sentence [LAYER] [WORDS] - [WORDS] = space separated tokens - a sentence must contains all token ähnelt.
        /// </summary>
        internal static string DescKwicAllInSentence {
            get {
                return ResourceManager.GetString("DescKwicAllInSentence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die kwic-any [LAYER] [WORDS] - KWIC any occurrence - [WORDS] = space separated tokens ähnelt.
        /// </summary>
        internal static string DescKwicAny {
            get {
                return ResourceManager.GetString("DescKwicAny", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die kwic-first-any [LAYER] [WORD] [WORDS] - KWIC any occurrence - [WORDS] = space separated tokens (KWIC must contains first token + any other) ähnelt.
        /// </summary>
        internal static string DescKwicFirstAny {
            get {
                return ResourceManager.GetString("DescKwicFirstAny", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ner [NERFILE] - performs a named entity recorgnition + kwic-resuls ähnelt.
        /// </summary>
        internal static string DescKwicNer {
            get {
                return ResourceManager.GetString("DescKwicNer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die kwic-phrase [LAYER] [WORDS] - [WORDS] = space separated tokens - all token in one sentence + given order ähnelt.
        /// </summary>
        internal static string DescKwicPhrase {
            get {
                return ResourceManager.GetString("DescKwicPhrase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die kwic-sig [LAYER] [y/n] [WORDS] - KWIC with significance metrics - [WORDS] = space separated tokens - Enable HTML-Highlight [y/n] ähnelt.
        /// </summary>
        internal static string DescKwicSig {
            get {
                return ResourceManager.GetString("DescKwicSig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die kwit [LAYER1] [LAYER2] [minFREQ] [WORDS] - Builds a KWIT-Tree. Search all [WORDS] in [LAYER1] (with minimum frequency [minFREQ]) - Output in [LAYER2] - [WORDS] = space separated tokens - all token in one sentence + given order ähnelt.
        /// </summary>
        internal static string DescKwit {
            get {
                return ResourceManager.GetString("DescKwit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die kwit-n [LAYER1] [LAYER2] [minFREQ] [PRE] [POST] [WORDS] - Like kwit (but you can specificate the range [PRE] and [POST] the match - e.g. [PRE] = 3) ähnelt.
        /// </summary>
        internal static string DescKwitSelect {
            get {
                return ResourceManager.GetString("DescKwitSelect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die layer-names - all available names for [LAYER] ähnelt.
        /// </summary>
        internal static string DescLayerNames {
            get {
                return ResourceManager.GetString("DescLayerNames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die get-types [LAYER] - list all [LAYER]-values (types) ähnelt.
        /// </summary>
        internal static string DescLayerTypes {
            get {
                return ResourceManager.GetString("DescLayerTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die meta - lists all meta-categories, labels and token/type/document-count ähnelt.
        /// </summary>
        internal static string DescMeta {
            get {
                return ResourceManager.GetString("DescMeta", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die meta-by-document - list all documents with meta-data ähnelt.
        /// </summary>
        internal static string DescMetaByDocument {
            get {
                return ResourceManager.GetString("DescMetaByDocument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die meta-categories - all available names for meta categories ähnelt.
        /// </summary>
        internal static string DescMetaCategories {
            get {
                return ResourceManager.GetString("DescMetaCategories", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die mtld [LAYER] [META] - calculates MTLD for [LAYER] clustered by [META] ähnelt.
        /// </summary>
        internal static string DescMtld {
            get {
                return ResourceManager.GetString("DescMtld", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ner [NERFILE] - performs a named entity recorgnition ähnelt.
        /// </summary>
        internal static string DescNer {
            get {
                return ResourceManager.GetString("DescNer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ngram [N] {LAYER} {minFREQ} - [N] sized N-gram based on {LAYER} (default: Wort) ähnelt.
        /// </summary>
        internal static string DescNgram {
            get {
                return ResourceManager.GetString("DescNgram", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ngram-select [N] [LAYER] [minFREQ] [WORDS/FILE] - all [N]-grams on [LAYER] containing [WORDS] or FILE:[FILE]. ähnelt.
        /// </summary>
        internal static string DescNgramSelect {
            get {
                return ResourceManager.GetString("DescNgramSelect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die position-frequency [LAYER1] [WORD] - left/right position of words around [WORD] ähnelt.
        /// </summary>
        internal static string DescPositionFrequency {
            get {
                return ResourceManager.GetString("DescPositionFrequency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die query [QUERY] - see help section [OUTPUT] for more information ähnelt.
        /// </summary>
        internal static string DescQuery {
            get {
                return ResourceManager.GetString("DescQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die query-list [QUERY] [NAME] - works like query, but returns a [NAME]ed list of document GUIDs. ähnelt.
        /// </summary>
        internal static string DescQueryList {
            get {
                return ResourceManager.GetString("DescQueryList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die similarity [META] {LAYER} - [META] similarity based on {LAYER} (default: WORT) ähnelt.
        /// </summary>
        internal static string DescSimilarity {
            get {
                return ResourceManager.GetString("DescSimilarity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die style-ngram [LAYER] [META] [N] [minFREQ] - style analytics based on ngram ähnelt.
        /// </summary>
        internal static string DescStyleNGram {
            get {
                return ResourceManager.GetString("DescStyleNGram", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die tf [META] {LAYER} - term frequency for [META] on {LAYER} (default: WORT) ähnelt.
        /// </summary>
        internal static string DescTf {
            get {
                return ResourceManager.GetString("DescTf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die tf-idf [META] {LAYER} - term frequency * inverse term frequency for [META] on {LAYER} (default: WORT) ähnelt.
        /// </summary>
        internal static string DescTfIdf {
            get {
                return ResourceManager.GetString("DescTfIdf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die token-list [LAYER] - list of all tokens in [LAYER] ähnelt.
        /// </summary>
        internal static string DescTokeList {
            get {
                return ResourceManager.GetString("DescTokeList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die token-list-select [LAYER] [REGEX] - list of all tokens in [LAYER] who are matching the [REGEX]-expression ähnelt.
        /// </summary>
        internal static string DescTokeListSelect {
            get {
                return ResourceManager.GetString("DescTokeListSelect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die vocabulary-complexity {LAYER} - vocabulary complexity in {LAYER} ähnelt.
        /// </summary>
        internal static string DescVocabularyComplexity {
            get {
                return ResourceManager.GetString("DescVocabularyComplexity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die vocd [LAYER] [META] - calculates VOCD for [LAYER] clustered by [META] ähnelt.
        /// </summary>
        internal static string DescVocd {
            get {
                return ResourceManager.GetString("DescVocd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die disambiguation [LAYER] [WORD] - allows to disambiguate a [WORD] on [LAYER]. ähnelt.
        /// </summary>
        internal static string DisambiguationeActionDescription {
            get {
                return ResourceManager.GetString("DisambiguationeActionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die documents ähnelt.
        /// </summary>
        internal static string Documents {
            get {
                return ResourceManager.GetString("Documents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die editdist [LAYER] - caculates the edit distance for all (to all) documents in [LAYER] ähnelt.
        /// </summary>
        internal static string editdist_desc {
            get {
                return ResourceManager.GetString("editdist_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die frequency ähnelt.
        /// </summary>
        internal static string Frequency {
            get {
                return ResourceManager.GetString("Frequency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die frequency (relativ) ähnelt.
        /// </summary>
        internal static string FrequencyRel {
            get {
                return ResourceManager.GetString("FrequencyRel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die GUID ähnelt.
        /// </summary>
        internal static string Guid {
            get {
                return ResourceManager.GetString("Guid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die keyword [LAYER] [TSV_RefFile] [COL_Token] [COL_RelFreq] - calculates the keynes of any [LAYER]-value by using a reference list [TSV_RefFile]. ähnelt.
        /// </summary>
        internal static string keyword_desc {
            get {
                return ResourceManager.GetString("keyword_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die layer ähnelt.
        /// </summary>
        internal static string Layer {
            get {
                return ResourceManager.GetString("Layer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die layernames ähnelt.
        /// </summary>
        internal static string Layernames {
            get {
                return ResourceManager.GetString("Layernames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die meta-select [category_1..n] - lists all meta-categories, labels and token/type/document-count for [category_1..n] ähnelt.
        /// </summary>
        internal static string MetaSelectedActionDescription {
            get {
                return ResourceManager.GetString("MetaSelectedActionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die meta-select+domain [category_1..n] - lists all meta-categories, labels and token/type/document-count for [category_1..n] (reduces all URLs &gt; domain name only) ähnelt.
        /// </summary>
        internal static string MetaSelectedDomainActionDescription {
            get {
                return ResourceManager.GetString("MetaSelectedDomainActionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die OTHER ähnelt.
        /// </summary>
        internal static string Other {
            get {
                return ResourceManager.GetString("Other", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die param ähnelt.
        /// </summary>
        internal static string Param {
            get {
                return ResourceManager.GetString("Param", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SDR (sentence/document-ratio) ähnelt.
        /// </summary>
        internal static string SDR {
            get {
                return ResourceManager.GetString("SDR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die sentences ähnelt.
        /// </summary>
        internal static string Sentences {
            get {
                return ResourceManager.GetString("Sentences", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Significance ähnelt.
        /// </summary>
        internal static string Significance {
            get {
                return ResourceManager.GetString("Significance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die TDR (type/document-ratio) ähnelt.
        /// </summary>
        internal static string TDR {
            get {
                return ResourceManager.GetString("TDR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ToDR (token/document-ratio) ähnelt.
        /// </summary>
        internal static string ToDR {
            get {
                return ResourceManager.GetString("ToDR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die TOKEN-COUNT ähnelt.
        /// </summary>
        internal static string TokenCount {
            get {
                return ResourceManager.GetString("TokenCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die token-factor ähnelt.
        /// </summary>
        internal static string TokenFactor {
            get {
                return ResourceManager.GetString("TokenFactor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die tokens ähnelt.
        /// </summary>
        internal static string Tokens {
            get {
                return ResourceManager.GetString("Tokens", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ToSR (token/sentence-ratio) ähnelt.
        /// </summary>
        internal static string ToSR {
            get {
                return ResourceManager.GetString("ToSR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die TSR (type/sentence-ratio) ähnelt.
        /// </summary>
        internal static string TSR {
            get {
                return ResourceManager.GetString("TSR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die TTR (type/token-ratio) ähnelt.
        /// </summary>
        internal static string TTR {
            get {
                return ResourceManager.GetString("TTR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die type ähnelt.
        /// </summary>
        internal static string Type {
            get {
                return ResourceManager.GetString("Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die types ähnelt.
        /// </summary>
        internal static string Types {
            get {
                return ResourceManager.GetString("Types", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die value ähnelt.
        /// </summary>
        internal static string Value {
            get {
                return ResourceManager.GetString("Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Word (A) ähnelt.
        /// </summary>
        internal static string WordA {
            get {
                return ResourceManager.GetString("WordA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Word (B) ähnelt.
        /// </summary>
        internal static string WordB {
            get {
                return ResourceManager.GetString("WordB", resourceCulture);
            }
        }
    }
}

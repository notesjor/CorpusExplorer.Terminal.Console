//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CorpusExplorer.Terminal.Console.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CorpusExplorer.Terminal.Console.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die help - to display command help ähnelt.
        /// </summary>
        internal static string BaseHelp {
            get {
                return ResourceManager.GetString("BaseHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die help - to display command help ähnelt.
        /// </summary>
        internal static string BaseHelp1 {
            get {
                return ResourceManager.GetString("BaseHelp1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die done ähnelt.
        /// </summary>
        internal static string Done {
            get {
                return ResourceManager.GetString("Done", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die done ähnelt.
        /// </summary>
        internal static string Done1 {
            get {
                return ResourceManager.GetString("Done1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die error! ähnelt.
        /// </summary>
        internal static string Error {
            get {
                return ResourceManager.GetString("Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die error! ähnelt.
        /// </summary>
        internal static string Error1 {
            get {
                return ResourceManager.GetString("Error1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die execute script: {0} ähnelt.
        /// </summary>
        internal static string ExecuteScript {
            get {
                return ResourceManager.GetString("ExecuteScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die execute script: {0} ähnelt.
        /// </summary>
        internal static string ExecuteScript1 {
            get {
                return ResourceManager.GetString("ExecuteScript1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example: cec.exe import#Cec6#C:\mycorpus.cec6 frequency3 POS Lemma Wort ähnelt.
        /// </summary>
        internal static string HelpActionExample {
            get {
                return ResourceManager.GetString("HelpActionExample", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example: cec.exe import#Cec6#C:\mycorpus.cec6 frequency3 POS Lemma Wort ähnelt.
        /// </summary>
        internal static string HelpActionExample1 {
            get {
                return ResourceManager.GetString("HelpActionExample1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  ähnelt.
        /// </summary>
        internal static string HelpActionHeader {
            get {
                return ResourceManager.GetString("HelpActionHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  ähnelt.
        /// </summary>
        internal static string HelpActionHeader1 {
            get {
                return ResourceManager.GetString("HelpActionHeader1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [ACTION] = {0} ähnelt.
        /// </summary>
        internal static string HelpActionPattern {
            get {
                return ResourceManager.GetString("HelpActionPattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [ACTION] = {0} ähnelt.
        /// </summary>
        internal static string HelpActionPattern1 {
            get {
                return ResourceManager.GetString("HelpActionPattern1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example: cec.exe annotate#Dpxc#SimpleTreeTagger#Deutsch#C:\dpxc\ convert Cec6#C:\mycorpus.cec6 ähnelt.
        /// </summary>
        internal static string HelpAnnotateExample {
            get {
                return ResourceManager.GetString("HelpAnnotateExample", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example: cec.exe annotate#Dpxc#SimpleTreeTagger#Deutsch#C:\dpxc\ convert Cec6#C:\mycorpus.cec6 ähnelt.
        /// </summary>
        internal static string HelpAnnotateExample1 {
            get {
                return ResourceManager.GetString("HelpAnnotateExample1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Annotate raw text - [INPUT]: ähnelt.
        /// </summary>
        internal static string HelpAnnotateHeader {
            get {
                return ResourceManager.GetString("HelpAnnotateHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Annotate raw text - [INPUT]: ähnelt.
        /// </summary>
        internal static string HelpAnnotateHeader1 {
            get {
                return ResourceManager.GetString("HelpAnnotateHeader1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Note: [DIRECTORY] = any directory you like - all files will be processed ähnelt.
        /// </summary>
        internal static string HelpAnnotateNote {
            get {
                return ResourceManager.GetString("HelpAnnotateNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Note: [DIRECTORY] = any directory you like - all files will be processed ähnelt.
        /// </summary>
        internal static string HelpAnnotateNote1 {
            get {
                return ResourceManager.GetString("HelpAnnotateNote1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [INPUT] = annotate#{0}#[TAGGER]#[LANGUAGE]#[DIRECTORY] ähnelt.
        /// </summary>
        internal static string HelpAnnotatePattern {
            get {
                return ResourceManager.GetString("HelpAnnotatePattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [INPUT] = annotate#{0}#[TAGGER]#[LANGUAGE]#[DIRECTORY] ähnelt.
        /// </summary>
        internal static string HelpAnnotatePattern1 {
            get {
                return ResourceManager.GetString("HelpAnnotatePattern1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [TAGGER] &amp; [LANGUAGE]: ähnelt.
        /// </summary>
        internal static string HelpAnnotateTaggerHeader {
            get {
                return ResourceManager.GetString("HelpAnnotateTaggerHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [TAGGER] &amp; [LANGUAGE]: ähnelt.
        /// </summary>
        internal static string HelpAnnotateTaggerHeader1 {
            get {
                return ResourceManager.GetString("HelpAnnotateTaggerHeader1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ([LANGUAGE] = {0}) ähnelt.
        /// </summary>
        internal static string HelpAnnotateTaggerLanguagePattern {
            get {
                return ResourceManager.GetString("HelpAnnotateTaggerLanguagePattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ([LANGUAGE] = {0}) ähnelt.
        /// </summary>
        internal static string HelpAnnotateTaggerLanguagePattern1 {
            get {
                return ResourceManager.GetString("HelpAnnotateTaggerLanguagePattern1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [TAGGER] = {0}  ähnelt.
        /// </summary>
        internal static string HelpAnnotateTaggerPattern {
            get {
                return ResourceManager.GetString("HelpAnnotateTaggerPattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [TAGGER] = {0}  ähnelt.
        /// </summary>
        internal static string HelpAnnotateTaggerPattern1 {
            get {
                return ResourceManager.GetString("HelpAnnotateTaggerPattern1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  ähnelt.
        /// </summary>
        internal static string HelpFormatFooter {
            get {
                return ResourceManager.GetString("HelpFormatFooter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  ähnelt.
        /// </summary>
        internal static string HelpFormatFooter1 {
            get {
                return ResourceManager.GetString("HelpFormatFooter1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  ähnelt.
        /// </summary>
        internal static string HelpFormatHeader {
            get {
                return ResourceManager.GetString("HelpFormatHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  ähnelt.
        /// </summary>
        internal static string HelpFormatHeader1 {
            get {
                return ResourceManager.GetString("HelpFormatHeader1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Note: [FILES] = separate files with &amp; - merges all files before processing ähnelt.
        /// </summary>
        internal static string HelpImportExample {
            get {
                return ResourceManager.GetString("HelpImportExample", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Note: [FILES] = separate files with &amp; - merges all files before processing ähnelt.
        /// </summary>
        internal static string HelpImportExample1 {
            get {
                return ResourceManager.GetString("HelpImportExample1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;: --- [INPUT]-- - :&gt; ähnelt.
        /// </summary>
        internal static string HelpImportHeader {
            get {
                return ResourceManager.GetString("HelpImportHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;: --- [INPUT]-- - :&gt; ähnelt.
        /// </summary>
        internal static string HelpImportHeader1 {
            get {
                return ResourceManager.GetString("HelpImportHeader1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [INPUT] = import#{0}#[FILES] ähnelt.
        /// </summary>
        internal static string HelpImportPattern {
            get {
                return ResourceManager.GetString("HelpImportPattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [INPUT] = import#{0}#[FILES] ähnelt.
        /// </summary>
        internal static string HelpImportPattern1 {
            get {
                return ResourceManager.GetString("HelpImportPattern1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Syntax for annotation/conversion: ähnelt.
        /// </summary>
        internal static string HelpModes {
            get {
                return ResourceManager.GetString("HelpModes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Syntax for annotation/conversion: ähnelt.
        /// </summary>
        internal static string HelpModes1 {
            get {
                return ResourceManager.GetString("HelpModes1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Note: [FILE] = any file you like to store the output ähnelt.
        /// </summary>
        internal static string HelpOutputExample {
            get {
                return ResourceManager.GetString("HelpOutputExample", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Note: [FILE] = any file you like to store the output ähnelt.
        /// </summary>
        internal static string HelpOutputExample1 {
            get {
                return ResourceManager.GetString("HelpOutputExample1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  ähnelt.
        /// </summary>
        internal static string HelpOutputHeader {
            get {
                return ResourceManager.GetString("HelpOutputHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  ähnelt.
        /// </summary>
        internal static string HelpOutputHeader1 {
            get {
                return ResourceManager.GetString("HelpOutputHeader1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [OUTPUT] = {0}#[FILE] ähnelt.
        /// </summary>
        internal static string HelpOutputPattern {
            get {
                return ResourceManager.GetString("HelpOutputPattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [OUTPUT] = {0}#[FILE] ähnelt.
        /// </summary>
        internal static string HelpOutputPattern1 {
            get {
                return ResourceManager.GetString("HelpOutputPattern1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  ähnelt.
        /// </summary>
        internal static string HelpQueryClusterSyntax {
            get {
                return ResourceManager.GetString("HelpQueryClusterSyntax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  ähnelt.
        /// </summary>
        internal static string HelpQueryClusterSyntax1 {
            get {
                return ResourceManager.GetString("HelpQueryClusterSyntax1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  ähnelt.
        /// </summary>
        internal static string HelpScripting {
            get {
                return ResourceManager.GetString("HelpScripting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  ähnelt.
        /// </summary>
        internal static string HelpScripting1 {
            get {
                return ResourceManager.GetString("HelpScripting1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ok! ähnelt.
        /// </summary>
        internal static string Ok {
            get {
                return ResourceManager.GetString("Ok", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ok! ähnelt.
        /// </summary>
        internal static string Ok1 {
            get {
                return ResourceManager.GetString("Ok1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ...ok! ähnelt.
        /// </summary>
        internal static string PointPointPointOk {
            get {
                return ResourceManager.GetString("PointPointPointOk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ...ok! ähnelt.
        /// </summary>
        internal static string PointPointPointOk1 {
            get {
                return ResourceManager.GetString("PointPointPointOk1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ready! ähnelt.
        /// </summary>
        internal static string Ready {
            get {
                return ResourceManager.GetString("Ready", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ready! ähnelt.
        /// </summary>
        internal static string Ready1 {
            get {
                return ResourceManager.GetString("Ready1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die running ähnelt.
        /// </summary>
        internal static string Running {
            get {
                return ResourceManager.GetString("Running", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die running ähnelt.
        /// </summary>
        internal static string Running1 {
            get {
                return ResourceManager.GetString("Running1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die FILE:[FILE] - to execute script ähnelt.
        /// </summary>
        internal static string String {
            get {
                return ResourceManager.GetString("String", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SAVE:[FILE] - to save command history as script ähnelt.
        /// </summary>
        internal static string String1 {
            get {
                return ResourceManager.GetString("String1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;: --- [F:FORMAT] --- :&gt; ähnelt.
        /// </summary>
        internal static string String10 {
            get {
                return ResourceManager.GetString("String10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die cec.exe {F:FORMAT} [INPUT] [ACTION] ähnelt.
        /// </summary>
        internal static string String100 {
            get {
                return ResourceManager.GetString("String100", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Syntax for analytics (writes output to file - like C:\out.xyx): ähnelt.
        /// </summary>
        internal static string String101 {
            get {
                return ResourceManager.GetString("String101", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die cec.exe [F:FORMAT]#&quot;C:\out.xyx&quot; [INPUT] [ACTION] ähnelt.
        /// </summary>
        internal static string String102 {
            get {
                return ResourceManager.GetString("String102", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Syntax for scripting: ähnelt.
        /// </summary>
        internal static string String103 {
            get {
                return ResourceManager.GetString("String103", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die cec.exe FILE:[PATH] ähnelt.
        /// </summary>
        internal static string String104 {
            get {
                return ResourceManager.GetString("String104", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die More detailed scripting errors: ähnelt.
        /// </summary>
        internal static string String105 {
            get {
                return ResourceManager.GetString("String105", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die cec.exe DEBUG:[PATH] ähnelt.
        /// </summary>
        internal static string String106 {
            get {
                return ResourceManager.GetString("String106", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die To start interactive shell mode ähnelt.
        /// </summary>
        internal static string String107 {
            get {
                return ResourceManager.GetString("String107", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die cec.exe SHELL ähnelt.
        /// </summary>
        internal static string String108 {
            get {
                return ResourceManager.GetString("String108", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die To start a REST-WebService ähnelt.
        /// </summary>
        internal static string String109 {
            get {
                return ResourceManager.GetString("String109", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die If you use [ACTION] or the scripting-mode [FILE: / DEBUG:], you can change the output format. ähnelt.
        /// </summary>
        internal static string String11 {
            get {
                return ResourceManager.GetString("String11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die cec.exe {F:FORMAT} PORT:2312 {IP:127.0.0.1} {TIMEOUT:120} {INPUT} ähnelt.
        /// </summary>
        internal static string String110 {
            get {
                return ResourceManager.GetString("String110", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example &apos;convert&apos;: cec.exe import#Cec5#C:\mycorpus.cec5 convert Cec6#C:\mycorpus.cec6 ähnelt.
        /// </summary>
        internal static string String111 {
            get {
                return ResourceManager.GetString("String111", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example &apos;query&apos;: cec.exe import#Cec5#C:\mycorpus.cec5 query !M:Author::Jan Cec6#C:\mycorpus.cec6 ähnelt.
        /// </summary>
        internal static string String112 {
            get {
                return ResourceManager.GetString("String112", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;: --- [OUTPUT] --- :&gt; ähnelt.
        /// </summary>
        internal static string String113 {
            get {
                return ResourceManager.GetString("String113", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [OUTPUT-EXPORTER] - for query or convert: ähnelt.
        /// </summary>
        internal static string String114 {
            get {
                return ResourceManager.GetString("String114", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [QUERY]: ähnelt.
        /// </summary>
        internal static string String115 {
            get {
                return ResourceManager.GetString("String115", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A preceding ! inverts the entire query ähnelt.
        /// </summary>
        internal static string String116 {
            get {
                return ResourceManager.GetString("String116", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die First character: ähnelt.
        /// </summary>
        internal static string String117 {
            get {
                return ResourceManager.GetString("String117", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die M = Metadata -OR- T = (Full)Text -OR- X = Extended Features ähnelt.
        /// </summary>
        internal static string String118 {
            get {
                return ResourceManager.GetString("String118", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die followed by configuration (see below), the :: separator and the values ähnelt.
        /// </summary>
        internal static string String119 {
            get {
                return ResourceManager.GetString("String119", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You need to set one of the following tags as first parameter: ähnelt.
        /// </summary>
        internal static string String12 {
            get {
                return ResourceManager.GetString("String12", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Second character [OPERATOR] (if you choose M): ähnelt.
        /// </summary>
        internal static string String120 {
            get {
                return ResourceManager.GetString("String120", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ? = regEx | : = contains (case sensitive) | . = contains (not case sensitive) ähnelt.
        /// </summary>
        internal static string String121 {
            get {
                return ResourceManager.GetString("String121", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die = = match exact (case sensitive) | - = match exact (not case sensitive) | ! = is empty ähnelt.
        /// </summary>
        internal static string String122 {
            get {
                return ResourceManager.GetString("String122", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ( = starts with (case sensitive) | ) = ends with (case sensitive) ähnelt.
        /// </summary>
        internal static string String123 {
            get {
                return ResourceManager.GetString("String123", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die If you have chosen M - enter the name of the meta category (see [ACTION] = meta-categories) ähnelt.
        /// </summary>
        internal static string String124 {
            get {
                return ResourceManager.GetString("String124", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example (query only): !M:Author::Jan - Finds all documents where &quot;Jan&quot; isn&apos;t an author ähnelt.
        /// </summary>
        internal static string String125 {
            get {
                return ResourceManager.GetString("String125", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example (in action): cec.exe import#Cec6#C:\mycorpus.cec6 query !M:Author::Jan Cec6#C:\mycorpus.cec6 ähnelt.
        /// </summary>
        internal static string String126 {
            get {
                return ResourceManager.GetString("String126", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Second character [OPERATOR] (if you choose T): ähnelt.
        /// </summary>
        internal static string String127 {
            get {
                return ResourceManager.GetString("String127", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ~ = any match | - = all in one document | = = all in one sentence | § = exact phrase ähnelt.
        /// </summary>
        internal static string String128 {
            get {
                return ResourceManager.GetString("String128", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ? = regEx value | F = regEx fulltext-search (very slow) | 1 = first plus any other match ähnelt.
        /// </summary>
        internal static string String129 {
            get {
                return ResourceManager.GetString("String129", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example: cec.exe import#Cec5#C:\mycorpus1.cec5&amp;C:\mycorpus2.cec5 convert Cec6#C:\mycorpus.cec6 ähnelt.
        /// </summary>
        internal static string String13 {
            get {
                return ResourceManager.GetString("String13", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die If you have chosen T - enter the layer name (see [ACTION] = layer-names) ähnelt.
        /// </summary>
        internal static string String130 {
            get {
                return ResourceManager.GetString("String130", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example (query only): T§Wort::OpenSource;Software - Finds all documents with the exact phrase &quot;OpensSource Software&quot; ähnelt.
        /// </summary>
        internal static string String131 {
            get {
                return ResourceManager.GetString("String131", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example (in action): cec.exe import#Cec6#C:\mycorpus.cec6 query T§Wort::OpenSource;Software Cec6#C:\mycorpus.cec6 ähnelt.
        /// </summary>
        internal static string String132 {
            get {
                return ResourceManager.GetString("String132", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Note 1: If you use several words in a T-query, then separate them with ; ähnelt.
        /// </summary>
        internal static string String133 {
            get {
                return ResourceManager.GetString("String133", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Note 2: You can also use a query file (*.ceusd) - use the FILE: prefix ähnelt.
        /// </summary>
        internal static string String134 {
            get {
                return ResourceManager.GetString("String134", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example: cec.exe import#Cec6#C:\mycorpus.cec6 query FILE:C:\query.ceusd Cec6#C:\mycorpus.cec6 ähnelt.
        /// </summary>
        internal static string String135 {
            get {
                return ResourceManager.GetString("String135", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Second character [OPERATOR] (if you choose X): ähnelt.
        /// </summary>
        internal static string String136 {
            get {
                return ResourceManager.GetString("String136", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die R = random selection | S = auto split by meta-data (use cluster for auto split) ähnelt.
        /// </summary>
        internal static string String137 {
            get {
                return ResourceManager.GetString("String137", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die If you use XR for random selection you need to specify the document count ähnelt.
        /// </summary>
        internal static string String138 {
            get {
                return ResourceManager.GetString("String138", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example: cec.exe import#Cec6#C:\mycorpus.cec6 query XR::100 frequency1 Wort ähnelt.
        /// </summary>
        internal static string String139 {
            get {
                return ResourceManager.GetString("String139", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Import corpus material - direct[INPUT]: ähnelt.
        /// </summary>
        internal static string String14 {
            get {
                return ResourceManager.GetString("String14", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Note 4: XR will generate two outputs - the regular and the inverted output. ähnelt.
        /// </summary>
        internal static string String140 {
            get {
                return ResourceManager.GetString("String140", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die If you have chosen XS - enter the name of the meta category (see [ACTION] = meta-categories) ähnelt.
        /// </summary>
        internal static string String141 {
            get {
                return ResourceManager.GetString("String141", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter the separator :: followed by the query ähnelt.
        /// </summary>
        internal static string String142 {
            get {
                return ResourceManager.GetString("String142", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die If you use XS you must specify the meta data type - TEXT, INT, FLOAT or DATE ähnelt.
        /// </summary>
        internal static string String143 {
            get {
                return ResourceManager.GetString("String143", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Note 5: XS will generate multiple outputs - based on clusters. ähnelt.
        /// </summary>
        internal static string String144 {
            get {
                return ResourceManager.GetString("String144", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die TEXT generates for every entry a separate snapshot ähnelt.
        /// </summary>
        internal static string String145 {
            get {
                return ResourceManager.GetString("String145", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example: cec.exe import#Cec6#C:\mycorpus.cec6 cluster XSAuthor::TEXT frequency1 Wort ähnelt.
        /// </summary>
        internal static string String146 {
            get {
                return ResourceManager.GetString("String146", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die INT / FLOAT you need to set up a [CLUSTERSIZE] ähnelt.
        /// </summary>
        internal static string String147 {
            get {
                return ResourceManager.GetString("String147", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example: cec.exe import#Cec6#C:\mycorpus.cec6 cluster XSYear::INT;10 Cec6#C:\mycorpus.cec6 ähnelt.
        /// </summary>
        internal static string String148 {
            get {
                return ResourceManager.GetString("String148", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DATE;C;[CLUSTERSIZE] - generates [CLUSTERSIZE] clusters. ähnelt.
        /// </summary>
        internal static string String149 {
            get {
                return ResourceManager.GetString("String149", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die cec.exe [INPUT] convert [OUTPUT] ähnelt.
        /// </summary>
        internal static string String15 {
            get {
                return ResourceManager.GetString("String15", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example: cec.exe import#Cec6#C:\mycorpus.cec6 cluster XSDate::DATE;C;10 Cec6#C:\mycorpus.cec6 ähnelt.
        /// </summary>
        internal static string String150 {
            get {
                return ResourceManager.GetString("String150", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DATE;CEN = Century-Cluster / DATE;DEC = Decate-Cluster / DATE;Y = Year-Cluster ähnelt.
        /// </summary>
        internal static string String151 {
            get {
                return ResourceManager.GetString("String151", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DATE;YW = Week-Cluster / DATE;YM = Year/Month-Cluster / DATE;YMD = Year/Month/Day-Cluster ähnelt.
        /// </summary>
        internal static string String152 {
            get {
                return ResourceManager.GetString("String152", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DATE;YMDH = Year/Month/Day/Hour-Cluster / DATE;YMDHM = Year/Month/Day/Hour/Minute-Cluster / ALL = Every-Time-Cluster ähnelt.
        /// </summary>
        internal static string String153 {
            get {
                return ResourceManager.GetString("String153", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example: cec.exe import#Cec6#C:\mycorpus.cec6 cluster XSDate::DATE;YMD Cec6#C:\mycorpus.cec6 ähnelt.
        /// </summary>
        internal static string String154 {
            get {
                return ResourceManager.GetString("String154", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WINDOW = Add WINDOW + SIZE as an prefix for each cluster argument to enable the rolling window feature ähnelt.
        /// </summary>
        internal static string String155 {
            get {
                return ResourceManager.GetString("String155", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example: cec.exe import#Cec6#C:\mycorpus.cec6 cluster XSDate::WINDOW7;DATE;YMD Cec6#C:\mycorpus.cec6 ähnelt.
        /// </summary>
        internal static string String156 {
            get {
                return ResourceManager.GetString("String156", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;: --- [SCRIPTING] --- :&gt; ähnelt.
        /// </summary>
        internal static string String157 {
            get {
                return ResourceManager.GetString("String157", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All actionss above can be stored in a file to build up a automatic process. ähnelt.
        /// </summary>
        internal static string String158 {
            get {
                return ResourceManager.GetString("String158", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die In this case it&apos;s recommended to redirect the [ACTION]-output to a file and not to stdout ähnelt.
        /// </summary>
        internal static string String159 {
            get {
                return ResourceManager.GetString("String159", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Syntax for filtering: ähnelt.
        /// </summary>
        internal static string String16 {
            get {
                return ResourceManager.GetString("String16", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example: import#Cec6#C:\mycorpus.cec6 frequency3 POS Lemma Wort &gt; output.csv ähnelt.
        /// </summary>
        internal static string String160 {
            get {
                return ResourceManager.GetString("String160", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die LOAD: {0}... ähnelt.
        /// </summary>
        internal static string String161 {
            get {
                return ResourceManager.GetString("String161", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die cec.exe [INPUT] [QUERY] [OUTPUT] ähnelt.
        /// </summary>
        internal static string String17 {
            get {
                return ResourceManager.GetString("String17", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Syntax for analytics (writes output to stdout): ähnelt.
        /// </summary>
        internal static string String18 {
            get {
                return ResourceManager.GetString("String18", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die cec.exe {F:FORMAT} [INPUT] [ACTION] ähnelt.
        /// </summary>
        internal static string String19 {
            get {
                return ResourceManager.GetString("String19", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die quit - to exit shell mode ähnelt.
        /// </summary>
        internal static string String2 {
            get {
                return ResourceManager.GetString("String2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Syntax for analytics (writes output to file - like C:\out.xyx): ähnelt.
        /// </summary>
        internal static string String20 {
            get {
                return ResourceManager.GetString("String20", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die cec.exe [F:FORMAT]#&quot;C:\out.xyx&quot; [INPUT] [ACTION] ähnelt.
        /// </summary>
        internal static string String21 {
            get {
                return ResourceManager.GetString("String21", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Syntax for scripting: ähnelt.
        /// </summary>
        internal static string String22 {
            get {
                return ResourceManager.GetString("String22", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die cec.exe FILE:[PATH] ähnelt.
        /// </summary>
        internal static string String23 {
            get {
                return ResourceManager.GetString("String23", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die More detailed scripting errors: ähnelt.
        /// </summary>
        internal static string String24 {
            get {
                return ResourceManager.GetString("String24", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die cec.exe DEBUG:[PATH] ähnelt.
        /// </summary>
        internal static string String25 {
            get {
                return ResourceManager.GetString("String25", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die To start interactive shell mode ähnelt.
        /// </summary>
        internal static string String26 {
            get {
                return ResourceManager.GetString("String26", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die cec.exe SHELL ähnelt.
        /// </summary>
        internal static string String27 {
            get {
                return ResourceManager.GetString("String27", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die To start a REST-WebService ähnelt.
        /// </summary>
        internal static string String28 {
            get {
                return ResourceManager.GetString("String28", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die cec.exe {F:FORMAT} PORT:2312 {IP:127.0.0.1} {TIMEOUT:120} {INPUT} ähnelt.
        /// </summary>
        internal static string String29 {
            get {
                return ResourceManager.GetString("String29", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;: --- [ACTION] --- :&gt; ähnelt.
        /// </summary>
        internal static string String3 {
            get {
                return ResourceManager.GetString("String3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example &apos;convert&apos;: cec.exe import#Cec5#C:\mycorpus.cec5 convert Cec6#C:\mycorpus.cec6 ähnelt.
        /// </summary>
        internal static string String30 {
            get {
                return ResourceManager.GetString("String30", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example &apos;query&apos;: cec.exe import#Cec5#C:\mycorpus.cec5 query !M:Author::Jan Cec6#C:\mycorpus.cec6 ähnelt.
        /// </summary>
        internal static string String31 {
            get {
                return ResourceManager.GetString("String31", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;: --- [OUTPUT] --- :&gt; ähnelt.
        /// </summary>
        internal static string String32 {
            get {
                return ResourceManager.GetString("String32", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [OUTPUT-EXPORTER] - for query or convert: ähnelt.
        /// </summary>
        internal static string String33 {
            get {
                return ResourceManager.GetString("String33", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [QUERY]: ähnelt.
        /// </summary>
        internal static string String34 {
            get {
                return ResourceManager.GetString("String34", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A preceding ! inverts the entire query ähnelt.
        /// </summary>
        internal static string String35 {
            get {
                return ResourceManager.GetString("String35", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die First character: ähnelt.
        /// </summary>
        internal static string String36 {
            get {
                return ResourceManager.GetString("String36", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die M = Metadata -OR- T = (Full)Text -OR- X = Extended Features ähnelt.
        /// </summary>
        internal static string String37 {
            get {
                return ResourceManager.GetString("String37", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die followed by configuration (see below), the :: separator and the values ähnelt.
        /// </summary>
        internal static string String38 {
            get {
                return ResourceManager.GetString("String38", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Second character [OPERATOR] (if you choose M): ähnelt.
        /// </summary>
        internal static string String39 {
            get {
                return ResourceManager.GetString("String39", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Most actions accept arguments. [ARG] is a required argument. {ARG} is an optional argument. ähnelt.
        /// </summary>
        internal static string String4 {
            get {
                return ResourceManager.GetString("String4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ? = regEx | : = contains (case sensitive) | . = contains (not case sensitive) ähnelt.
        /// </summary>
        internal static string String40 {
            get {
                return ResourceManager.GetString("String40", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die = = match exact (case sensitive) | - = match exact (not case sensitive) | ! = is empty ähnelt.
        /// </summary>
        internal static string String41 {
            get {
                return ResourceManager.GetString("String41", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ( = starts with (case sensitive) | ) = ends with (case sensitive) ähnelt.
        /// </summary>
        internal static string String42 {
            get {
                return ResourceManager.GetString("String42", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die If you have chosen M - enter the name of the meta category (see [ACTION] = meta-categories) ähnelt.
        /// </summary>
        internal static string String43 {
            get {
                return ResourceManager.GetString("String43", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example (query only): !M:Author::Jan - Finds all documents where &quot;Jan&quot; isn&apos;t an author ähnelt.
        /// </summary>
        internal static string String44 {
            get {
                return ResourceManager.GetString("String44", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example (in action): cec.exe import#Cec6#C:\mycorpus.cec6 query !M:Author::Jan Cec6#C:\mycorpus.cec6 ähnelt.
        /// </summary>
        internal static string String45 {
            get {
                return ResourceManager.GetString("String45", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Second character [OPERATOR] (if you choose T): ähnelt.
        /// </summary>
        internal static string String46 {
            get {
                return ResourceManager.GetString("String46", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ~ = any match | - = all in one document | = = all in one sentence | § = exact phrase ähnelt.
        /// </summary>
        internal static string String47 {
            get {
                return ResourceManager.GetString("String47", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ? = regEx value | F = regEx fulltext-search (very slow) | 1 = first plus any other match ähnelt.
        /// </summary>
        internal static string String48 {
            get {
                return ResourceManager.GetString("String48", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die If you have chosen T - enter the layer name (see [ACTION] = layer-names) ähnelt.
        /// </summary>
        internal static string String49 {
            get {
                return ResourceManager.GetString("String49", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example: cec.exe F:JSON import#Cec6#C:\mycorpus.cec6 frequency3 POS Lemma Wort ähnelt.
        /// </summary>
        internal static string String5 {
            get {
                return ResourceManager.GetString("String5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example (query only): T§Wort::OpenSource;Software - Finds all documents with the exact phrase &quot;OpensSource Software&quot; ähnelt.
        /// </summary>
        internal static string String50 {
            get {
                return ResourceManager.GetString("String50", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example (in action): cec.exe import#Cec6#C:\mycorpus.cec6 query T§Wort::OpenSource;Software Cec6#C:\mycorpus.cec6 ähnelt.
        /// </summary>
        internal static string String51 {
            get {
                return ResourceManager.GetString("String51", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Note 1: If you use several words in a T-query, then separate them with ; ähnelt.
        /// </summary>
        internal static string String52 {
            get {
                return ResourceManager.GetString("String52", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Note 2: You can also use a query file (*.ceusd) - use the FILE: prefix ähnelt.
        /// </summary>
        internal static string String53 {
            get {
                return ResourceManager.GetString("String53", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example: cec.exe import#Cec6#C:\mycorpus.cec6 query FILE:C:\query.ceusd Cec6#C:\mycorpus.cec6 ähnelt.
        /// </summary>
        internal static string String54 {
            get {
                return ResourceManager.GetString("String54", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Second character [OPERATOR] (if you choose X): ähnelt.
        /// </summary>
        internal static string String55 {
            get {
                return ResourceManager.GetString("String55", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die R = random selection | S = auto split by meta-data (use cluster for auto split) ähnelt.
        /// </summary>
        internal static string String56 {
            get {
                return ResourceManager.GetString("String56", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die If you use XR for random selection you need to specify the document count ähnelt.
        /// </summary>
        internal static string String57 {
            get {
                return ResourceManager.GetString("String57", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example: cec.exe import#Cec6#C:\mycorpus.cec6 query XR::100 frequency1 Wort ähnelt.
        /// </summary>
        internal static string String58 {
            get {
                return ResourceManager.GetString("String58", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Note 4: XR will generate two outputs - the regular and the inverted output. ähnelt.
        /// </summary>
        internal static string String59 {
            get {
                return ResourceManager.GetString("String59", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use FNT: to hide the TID (be carefull with this, if you are using CLUSTER) ähnelt.
        /// </summary>
        internal static string String6 {
            get {
                return ResourceManager.GetString("String6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die If you have chosen XS - enter the name of the meta category (see [ACTION] = meta-categories) ähnelt.
        /// </summary>
        internal static string String60 {
            get {
                return ResourceManager.GetString("String60", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter the separator :: followed by the query ähnelt.
        /// </summary>
        internal static string String61 {
            get {
                return ResourceManager.GetString("String61", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die If you use XS you must specify the meta data type - TEXT, INT, FLOAT or DATE ähnelt.
        /// </summary>
        internal static string String62 {
            get {
                return ResourceManager.GetString("String62", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Note 5: XS will generate multiple outputs - based on clusters. ähnelt.
        /// </summary>
        internal static string String63 {
            get {
                return ResourceManager.GetString("String63", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die TEXT generates for every entry a separate snapshot ähnelt.
        /// </summary>
        internal static string String64 {
            get {
                return ResourceManager.GetString("String64", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example: cec.exe import#Cec6#C:\mycorpus.cec6 cluster XSAuthor::TEXT frequency1 Wort ähnelt.
        /// </summary>
        internal static string String65 {
            get {
                return ResourceManager.GetString("String65", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die INT / FLOAT you need to set up a [CLUSTERSIZE] ähnelt.
        /// </summary>
        internal static string String66 {
            get {
                return ResourceManager.GetString("String66", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example: cec.exe import#Cec6#C:\mycorpus.cec6 cluster XSYear::INT;10 Cec6#C:\mycorpus.cec6 ähnelt.
        /// </summary>
        internal static string String67 {
            get {
                return ResourceManager.GetString("String67", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DATE;C;[CLUSTERSIZE] - generates [CLUSTERSIZE] clusters. ähnelt.
        /// </summary>
        internal static string String68 {
            get {
                return ResourceManager.GetString("String68", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example: cec.exe import#Cec6#C:\mycorpus.cec6 cluster XSDate::DATE;C;10 Cec6#C:\mycorpus.cec6 ähnelt.
        /// </summary>
        internal static string String69 {
            get {
                return ResourceManager.GetString("String69", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Normal STDOUT redirections is very slow (like: cec.exe F:CSV import#Cec6#C:\corpus.cec6 frequency1 &gt; C:\out.csv) ähnelt.
        /// </summary>
        internal static string String7 {
            get {
                return ResourceManager.GetString("String7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DATE;CEN = Century-Cluster / DATE;DEC = Decate-Cluster / DATE;Y = Year-Cluster ähnelt.
        /// </summary>
        internal static string String70 {
            get {
                return ResourceManager.GetString("String70", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DATE;YW = Week-Cluster / DATE;YM = Year/Month-Cluster / DATE;YMD = Year/Month/Day-Cluster ähnelt.
        /// </summary>
        internal static string String71 {
            get {
                return ResourceManager.GetString("String71", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DATE;YMDH = Year/Month/Day/Hour-Cluster / DATE;YMDHM = Year/Month/Day/Hour/Minute-Cluster / ALL = Every-Time-Cluster ähnelt.
        /// </summary>
        internal static string String72 {
            get {
                return ResourceManager.GetString("String72", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example: cec.exe import#Cec6#C:\mycorpus.cec6 cluster XSDate::DATE;YMD Cec6#C:\mycorpus.cec6 ähnelt.
        /// </summary>
        internal static string String73 {
            get {
                return ResourceManager.GetString("String73", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WINDOW = Add WINDOW + SIZE as an prefix for each cluster argument to enable the rolling window feature ähnelt.
        /// </summary>
        internal static string String74 {
            get {
                return ResourceManager.GetString("String74", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example: cec.exe import#Cec6#C:\mycorpus.cec6 cluster XSDate::WINDOW7;DATE;YMD Cec6#C:\mycorpus.cec6 ähnelt.
        /// </summary>
        internal static string String75 {
            get {
                return ResourceManager.GetString("String75", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;: --- [SCRIPTING] --- :&gt; ähnelt.
        /// </summary>
        internal static string String76 {
            get {
                return ResourceManager.GetString("String76", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All actionss above can be stored in a file to build up a automatic process. ähnelt.
        /// </summary>
        internal static string String77 {
            get {
                return ResourceManager.GetString("String77", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die In this case it&apos;s recommended to redirect the [ACTION]-output to a file and not to stdout ähnelt.
        /// </summary>
        internal static string String78 {
            get {
                return ResourceManager.GetString("String78", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example: import#Cec6#C:\mycorpus.cec6 frequency3 POS Lemma Wort &gt; output.csv ähnelt.
        /// </summary>
        internal static string String79 {
            get {
                return ResourceManager.GetString("String79", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use the optimized direct way, by adding the output-path to the [F:FORMAT]-option ähnelt.
        /// </summary>
        internal static string String8 {
            get {
                return ResourceManager.GetString("String8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die LOAD: {0}... ähnelt.
        /// </summary>
        internal static string String80 {
            get {
                return ResourceManager.GetString("String80", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die FILE:[FILE] - to execute script ähnelt.
        /// </summary>
        internal static string String81 {
            get {
                return ResourceManager.GetString("String81", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SAVE:[FILE] - to save command history as script ähnelt.
        /// </summary>
        internal static string String82 {
            get {
                return ResourceManager.GetString("String82", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die quit - to exit shell mode ähnelt.
        /// </summary>
        internal static string String83 {
            get {
                return ResourceManager.GetString("String83", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;: --- [ACTION] --- :&gt; ähnelt.
        /// </summary>
        internal static string String84 {
            get {
                return ResourceManager.GetString("String84", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Most actions accept arguments. [ARG] is a required argument. {ARG} is an optional argument. ähnelt.
        /// </summary>
        internal static string String85 {
            get {
                return ResourceManager.GetString("String85", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example: cec.exe F:JSON import#Cec6#C:\mycorpus.cec6 frequency3 POS Lemma Wort ähnelt.
        /// </summary>
        internal static string String86 {
            get {
                return ResourceManager.GetString("String86", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use FNT: to hide the TID (be carefull with this, if you are using CLUSTER) ähnelt.
        /// </summary>
        internal static string String87 {
            get {
                return ResourceManager.GetString("String87", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Normal STDOUT redirections is very slow (like: cec.exe F:CSV import#Cec6#C:\corpus.cec6 frequency1 &gt; C:\out.csv) ähnelt.
        /// </summary>
        internal static string String88 {
            get {
                return ResourceManager.GetString("String88", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use the optimized direct way, by adding the output-path to the [F:FORMAT]-option ähnelt.
        /// </summary>
        internal static string String89 {
            get {
                return ResourceManager.GetString("String89", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example: cec.exe F:CSV#C:\out.tsv import#Cec6#C:\mycorpus.cec6 frequency1 ähnelt.
        /// </summary>
        internal static string String9 {
            get {
                return ResourceManager.GetString("String9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example: cec.exe F:CSV#C:\out.tsv import#Cec6#C:\mycorpus.cec6 frequency1 ähnelt.
        /// </summary>
        internal static string String90 {
            get {
                return ResourceManager.GetString("String90", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;: --- [F:FORMAT] --- :&gt; ähnelt.
        /// </summary>
        internal static string String91 {
            get {
                return ResourceManager.GetString("String91", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die If you use [ACTION] or the scripting-mode [FILE: / DEBUG:], you can change the output format. ähnelt.
        /// </summary>
        internal static string String92 {
            get {
                return ResourceManager.GetString("String92", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You need to set one of the following tags as first parameter: ähnelt.
        /// </summary>
        internal static string String93 {
            get {
                return ResourceManager.GetString("String93", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Example: cec.exe import#Cec5#C:\mycorpus1.cec5&amp;C:\mycorpus2.cec5 convert Cec6#C:\mycorpus.cec6 ähnelt.
        /// </summary>
        internal static string String94 {
            get {
                return ResourceManager.GetString("String94", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Import corpus material - direct[INPUT]: ähnelt.
        /// </summary>
        internal static string String95 {
            get {
                return ResourceManager.GetString("String95", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die cec.exe [INPUT] convert [OUTPUT] ähnelt.
        /// </summary>
        internal static string String96 {
            get {
                return ResourceManager.GetString("String96", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Syntax for filtering: ähnelt.
        /// </summary>
        internal static string String97 {
            get {
                return ResourceManager.GetString("String97", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die cec.exe [INPUT] [QUERY] [OUTPUT] ähnelt.
        /// </summary>
        internal static string String98 {
            get {
                return ResourceManager.GetString("String98", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Syntax for analytics (writes output to stdout): ähnelt.
        /// </summary>
        internal static string String99 {
            get {
                return ResourceManager.GetString("String99", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die action unavailable ähnelt.
        /// </summary>
        internal static string WebErrorActionUnavailable {
            get {
                return ResourceManager.GetString("WebErrorActionUnavailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die action unavailable ähnelt.
        /// </summary>
        internal static string WebErrorActionUnavailable1 {
            get {
                return ResourceManager.GetString("WebErrorActionUnavailable1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die corpus unavailable ähnelt.
        /// </summary>
        internal static string WebErrorCorpusUnavailable {
            get {
                return ResourceManager.GetString("WebErrorCorpusUnavailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die corpus unavailable ähnelt.
        /// </summary>
        internal static string WebErrorCorpusUnavailable1 {
            get {
                return ResourceManager.GetString("WebErrorCorpusUnavailable1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die invalid post-data ähnelt.
        /// </summary>
        internal static string WebErrorInvalidPostData {
            get {
                return ResourceManager.GetString("WebErrorInvalidPostData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die invalid post-data ähnelt.
        /// </summary>
        internal static string WebErrorInvalidPostData1 {
            get {
                return ResourceManager.GetString("WebErrorInvalidPostData1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die this service is only up to 100 documents/pages ähnelt.
        /// </summary>
        internal static string WebErrorPostMax100Pages {
            get {
                return ResourceManager.GetString("WebErrorPostMax100Pages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die this service is only up to 100 documents/pages ähnelt.
        /// </summary>
        internal static string WebErrorPostMax100Pages1 {
            get {
                return ResourceManager.GetString("WebErrorPostMax100Pages1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die tagging process failed ähnelt.
        /// </summary>
        internal static string WebErrorTaggingProcessError {
            get {
                return ResourceManager.GetString("WebErrorTaggingProcessError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die tagging process failed ähnelt.
        /// </summary>
        internal static string WebErrorTaggingProcessError1 {
            get {
                return ResourceManager.GetString("WebErrorTaggingProcessError1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die wrong language selected - use: {0} ähnelt.
        /// </summary>
        internal static string WebErrorWrongLanguage {
            get {
                return ResourceManager.GetString("WebErrorWrongLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die wrong language selected - use: {0} ähnelt.
        /// </summary>
        internal static string WebErrorWrongLanguage1 {
            get {
                return ResourceManager.GetString("WebErrorWrongLanguage1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The name of the action ähnelt.
        /// </summary>
        internal static string WebHelpActionsActionName {
            get {
                return ResourceManager.GetString("WebHelpActionsActionName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The name of the action ähnelt.
        /// </summary>
        internal static string WebHelpActionsActionName1 {
            get {
                return ResourceManager.GetString("WebHelpActionsActionName1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Short description - action and parameter ähnelt.
        /// </summary>
        internal static string WebHelpActionsDescription {
            get {
                return ResourceManager.GetString("WebHelpActionsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Short description - action and parameter ähnelt.
        /// </summary>
        internal static string WebHelpActionsDescription1 {
            get {
                return ResourceManager.GetString("WebHelpActionsDescription1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Adds/analyzes a new corpus ähnelt.
        /// </summary>
        internal static string WebHelpAddCorpus {
            get {
                return ResourceManager.GetString("WebHelpAddCorpus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Adds/analyzes a new corpus ähnelt.
        /// </summary>
        internal static string WebHelpAddCorpus1 {
            get {
                return ResourceManager.GetString("WebHelpAddCorpus1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die text = document-text / meta = key/value dictionary - example: {&quot;text&quot;:&quot;annotate this text&quot;,&quot;meta&quot;:{&quot;Author&quot;:&quot;Jan&quot;,&quot;Integer&quot;:5,&quot;Date&quot;:&quot;2019-01-08T21:32:01.0194747+01:00&quot;}} ähnelt.
        /// </summary>
        internal static string WebHelpAddCorpusParameterDocuments {
            get {
                return ResourceManager.GetString("WebHelpAddCorpusParameterDocuments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die text = document-text / meta = key/value dictionary - example: {&quot;text&quot;:&quot;annotate this text&quot;,&quot;meta&quot;:{&quot;Author&quot;:&quot;Jan&quot;,&quot;Integer&quot;:5,&quot;Date&quot;:&quot;2019-01-08T21:32:01.0194747+01:00&quot;}} ähnelt.
        /// </summary>
        internal static string WebHelpAddCorpusParameterDocuments1 {
            get {
                return ResourceManager.GetString("WebHelpAddCorpusParameterDocuments1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die the language of all documents ähnelt.
        /// </summary>
        internal static string WebHelpAddCorpusParameterLanguage {
            get {
                return ResourceManager.GetString("WebHelpAddCorpusParameterLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die the language of all documents ähnelt.
        /// </summary>
        internal static string WebHelpAddCorpusParameterLanguage1 {
            get {
                return ResourceManager.GetString("WebHelpAddCorpusParameterLanguage1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shows all available Actions for {0}execute/ ähnelt.
        /// </summary>
        internal static string WebHelpExecute {
            get {
                return ResourceManager.GetString("WebHelpExecute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shows all available Actions for {0}execute/ ähnelt.
        /// </summary>
        internal static string WebHelpExecute1 {
            get {
                return ResourceManager.GetString("WebHelpExecute1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die name of the action to execute ähnelt.
        /// </summary>
        internal static string WebHelpExecuteParameterAction {
            get {
                return ResourceManager.GetString("WebHelpExecuteParameterAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die name of the action to execute ähnelt.
        /// </summary>
        internal static string WebHelpExecuteParameterAction1 {
            get {
                return ResourceManager.GetString("WebHelpExecuteParameterAction1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die example: [&apos;POS&apos;, &apos;Lemma&apos;, &apos;Wort&apos;] ähnelt.
        /// </summary>
        internal static string WebHelpExecuteParameterArguments {
            get {
                return ResourceManager.GetString("WebHelpExecuteParameterArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die example: [&apos;POS&apos;, &apos;Lemma&apos;, &apos;Wort&apos;] ähnelt.
        /// </summary>
        internal static string WebHelpExecuteParameterArguments1 {
            get {
                return ResourceManager.GetString("WebHelpExecuteParameterArguments1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die the id of the corpus you added via {0}add/ ähnelt.
        /// </summary>
        internal static string WebHelpExecuteParameterCorpusId {
            get {
                return ResourceManager.GetString("WebHelpExecuteParameterCorpusId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die the id of the corpus you added via {0}add/ ähnelt.
        /// </summary>
        internal static string WebHelpExecuteParameterCorpusId1 {
            get {
                return ResourceManager.GetString("WebHelpExecuteParameterCorpusId1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die example: [&apos;guid1&apos;, &apos;guid2&apos;, &apos;guid3&apos;] ähnelt.
        /// </summary>
        internal static string WebHelpExecuteParameterGuids {
            get {
                return ResourceManager.GetString("WebHelpExecuteParameterGuids", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die example: [&apos;guid1&apos;, &apos;guid2&apos;, &apos;guid3&apos;] ähnelt.
        /// </summary>
        internal static string WebHelpExecuteParameterGuids1 {
            get {
                return ResourceManager.GetString("WebHelpExecuteParameterGuids1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die execution result ähnelt.
        /// </summary>
        internal static string WebHelpExecuteResult {
            get {
                return ResourceManager.GetString("WebHelpExecuteResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die execution result ähnelt.
        /// </summary>
        internal static string WebHelpExecuteResult1 {
            get {
                return ResourceManager.GetString("WebHelpExecuteResult1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Lists of all available Actions for {0}execute/ ähnelt.
        /// </summary>
        internal static string WebHelpListActions {
            get {
                return ResourceManager.GetString("WebHelpListActions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Lists of all available Actions for {0}execute/ ähnelt.
        /// </summary>
        internal static string WebHelpListActions1 {
            get {
                return ResourceManager.GetString("WebHelpListActions1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die lists all available languages for {0}add/ ähnelt.
        /// </summary>
        internal static string WebHelpListAvailableLanguages {
            get {
                return ResourceManager.GetString("WebHelpListAvailableLanguages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die lists all available languages for {0}add/ ähnelt.
        /// </summary>
        internal static string WebHelpListAvailableLanguages1 {
            get {
                return ResourceManager.GetString("WebHelpListAvailableLanguages1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die all available languages ähnelt.
        /// </summary>
        internal static string WebHelpParameterLanguages {
            get {
                return ResourceManager.GetString("WebHelpParameterLanguages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die all available languages ähnelt.
        /// </summary>
        internal static string WebHelpParameterLanguages1 {
            get {
                return ResourceManager.GetString("WebHelpParameterLanguages1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die INIT WebService (mode: file) ähnelt.
        /// </summary>
        internal static string WebInit {
            get {
                return ResourceManager.GetString("WebInit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die INIT WebService (mode: file) ähnelt.
        /// </summary>
        internal static string WebInit1 {
            get {
                return ResourceManager.GetString("WebInit1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ..:: CURRENT ACTIONS ::.. ähnelt.
        /// </summary>
        internal static string XmlScriptCurrentActions {
            get {
                return ResourceManager.GetString("XmlScriptCurrentActions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ..:: CURRENT ACTIONS ::.. ähnelt.
        /// </summary>
        internal static string XmlScriptCurrentActions1 {
            get {
                return ResourceManager.GetString("XmlScriptCurrentActions1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die E001: XML Parser Error ähnelt.
        /// </summary>
        internal static string XmlScriptParserError001 {
            get {
                return ResourceManager.GetString("XmlScriptParserError001", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die E001: XML Parser Error ähnelt.
        /// </summary>
        internal static string XmlScriptParserError0011 {
            get {
                return ResourceManager.GetString("XmlScriptParserError0011", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die --- SCRIPT SUCCESSFULLY EXECUTED --- ähnelt.
        /// </summary>
        internal static string XmlScriptSuccess {
            get {
                return ResourceManager.GetString("XmlScriptSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die --- SCRIPT SUCCESSFULLY EXECUTED --- ähnelt.
        /// </summary>
        internal static string XmlScriptSuccess1 {
            get {
                return ResourceManager.GetString("XmlScriptSuccess1", resourceCulture);
            }
        }
    }
}
